services:

  app:
    build:
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      kafka_1:
        condition: service_healthy

  postgres:
    image: postgres:17.4-alpine3.21
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgresql-data:/var/lib/postgresql
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 5s
      retries: 5

  kafka_1:
    image: bitnami/kafka:4.0
    ports:
      - "19092:9092"
    environment:
      KAFKA_CFG_LISTENERS: CONTROLLER://kafka_1:9091,DOCKER://0.0.0.0:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: DOCKER://kafka_1:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: DOCKER

      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka_1:9091
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    healthcheck:
      test: ["CMD-SHELL", "timeout 1 bash -c '</dev/tcp/localhost/9092' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
      image: prom/prometheus
      volumes:
        - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      ports:
        - "9090:9090"
volumes:
  postgresql-data:
